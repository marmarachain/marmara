name: Marmara Linux CI

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:

  linux-build:
    name: Linux Build
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Install deps (Linux)

        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update  # prevents repo404 errors on apt-remove below
          sudo apt-get remove php* msodbcsql17 mysql* powershell dotn*
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get upgrade -y
          sudo apt-get install -q \
                 curl \
                 python3 \
                 python3-dev \
                 python3-setuptools \
                 python3-pip \
                 libcurl4-openssl-dev \
                 libssl-dev -y
          python3 -m pip install setuptools wheel
          python3 -m pip install slick-bitcoinrpc pytest wget jsonschema
      - name: Build (Linux)
        run: |
          # flag for some CC tests transactions - so DO NOT USE THIS CI ARTIFACTS IN PRODUCTION!!!
          CONFIGURE_FLAGS='CPPFLAGS=-DTESTMODE' ./zcutil/build.sh -j$(nproc)
          tar -czvf marmara-linux.tar.gz src/marmarad src/marmara-cli
      - name: Upload marmara-linux.tar.gz as artifact
        uses: actions/upload-artifact@v4
        with:
          name: marmara-linux
          path: ./marmara-linux.tar.gz

  # linux-test-dice-token-reards-faucet-cc:
  #   if: ${{ false }}
  #   name: Test (Linux/Dice, Token, Faucet, Rewards)
  #   runs-on: ubuntu-18.04
  #   needs: linux-build

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Install deps (Dice, Token, Faucet, Rewards CC)
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -q \
  #                curl \
  #                python3 \
  #                python3-dev \
  #                python3-setuptools \
  #                python3-pip \
  #                libcurl4-openssl-dev \
  #                libssl-dev -y
  #         python3 -m pip install setuptools wheel
  #         python3 -m pip install slick-bitcoinrpc pytest wget jsonschema
  #     - name: Download komodo-linux.tar.gz
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: komodo-linux

  #     - name: Test CC (Linux)
  #       run: |
  #         mv komodo-linux/komodo-linux.tar.gz .
  #         mkdir -p src
  #         tar xzvf komodo-linux.tar.gz
  #         ./zcutil/fetch-params.sh
  #         cd qa/pytest_komodo
  #         ./ci_setup.sh "cc_modules/test_dice.py cc_modules/test_faucet.py cc_modules/test_token.py cc_modules/test_rewards.py"
  linux-test-oracles:
    if: ${{ false }}
    
    name: Test (Linux/OraclesCC)
    runs-on: ubuntu-20.04
    needs: linux-build

    steps:
      - uses: actions/checkout@v4

      - name: Install deps (OraclesCC)
        run: |
          sudo apt-get update
          sudo apt-get install -q \
                 curl \
                 python3 \
                 python3-dev \
                 python3-setuptools \
                 python3-pip \
                 libcurl4-openssl-dev \
                 libssl-dev -y
          python3 -m pip install setuptools wheel
          python3 -m pip install slick-bitcoinrpc pytest wget jsonschema
      - name: Download marmara-linux.tar.gz
        uses: actions/download-artifact@v4
        with:
          name: marmara-linux

      - name: Oracles Test (Linux)
        run: |
          mv marmara-linux/marmara-linux.tar.gz .
          mkdir -p src
          tar xzvf marmara-linux.tar.gz
          ./zcutil/fetch-params.sh
          cd qa/pytest_komodo
          ./ci_setup.sh cc_modules/test_oracles.py
  linux-test-baserpc:
    if: ${{ false }}
    
    name: Test (Linux/BasicRPC)
    runs-on: ubuntu-20.04
    needs: linux-build

    steps:
      - uses: actions/checkout@v4

      - name: Install deps (BasicRPC)
        run: |
          sudo apt-get update
          sudo apt-get install -q \
                 curl \
                 python3 \
                 python3-dev \
                 python3-setuptools \
                 python3-pip \
                 libcurl4-openssl-dev \
                 libssl-dev -y
          python3 -m pip install setuptools wheel
          python3 -m pip install slick-bitcoinrpc pytest wget jsonschema
      - name: Download marmara-linux.tar.gz
        uses: actions/download-artifact@v4
        with:
          name: marmara-linux

      - name: BasicRPC Test (Linux)
        run: |
          mv marmara-linux/marmara-linux.tar.gz .
          mkdir -p src
          tar xzvf marmara-linux.tar.gz
          ./zcutil/fetch-params.sh
          cd qa/pytest_komodo
          ./ci_setup.sh basic
  # linux-test-channels:
  #  if: ${{ false }}

  #  name: Test (Linux/ChannelsCC)
  #  runs-on: ubuntu-20.04
  #  needs: linux-build

  #  steps:
  #    - uses: actions/checkout@v2

      # - name: Install deps (ChannelsCC)
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -q \
      #            curl \
      #            python3 \
      #            python3-dev \
      #            python3-setuptools \
      #            python3-pip \
      #            libcurl4-openssl-dev \
      #            libssl-dev -y
      #     python3 -m pip install setuptools wheel
      #     python3 -m pip install slick-bitcoinrpc pytest wget jsonschema
      # - name: Download komodo-linux.tar.gz
      #   uses: actions/download-artifact@v1
      #   with:
      #     name: komodo-linux

      # - name: Channels Test (Linux)
      #   run: |
      #     mv komodo-linux/komodo-linux.tar.gz .
      #     mkdir -p src
      #     tar xzvf komodo-linux.tar.gz
      #     ./zcutil/fetch-params.sh
      #     cd qa/pytest_komodo
      #     ./ci_setup.sh cc_modules/test_channels.py
  # linux-test-heir:
  #  if: ${{ false }}
  #   name: Test (Linux/HeirCC)
  #   runs-on: ubuntu-18.04
  #   needs: linux-build

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Install deps (HeirCC)
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -q \
  #                curl \
  #                python3 \
  #                python3-dev \
  #                python3-setuptools \
  #                python3-pip \
  #                libcurl4-openssl-dev \
  #                libssl-dev -y
  #         python3 -m pip install setuptools wheel
  #         python3 -m pip install slick-bitcoinrpc pytest wget jsonschema
  #     - name: Download komodo-linux.tar.gz
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: komodo-linux

  #     - name: Heir Test (Linux)
  #       run: |
  #         mv komodo-linux/komodo-linux.tar.gz .
  #         mkdir -p src
  #         tar xzvf komodo-linux.tar.gz
  #         ./zcutil/fetch-params.sh
  #         cd qa/pytest_komodo
  #         ./ci_setup.sh cc_modules/test_heir.py
