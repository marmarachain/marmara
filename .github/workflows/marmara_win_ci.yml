name: Marmara Win CI

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:

  windows-build:

    name: Win Build
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4
    - name: Install deps(mingw)
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update  # prevents repo404 errors on apt-remove below
        sudo apt-get remove php*  msodbcsql17 mysql* powershell containernetworking-* containers* dotn*
        sudo ACCEPT_EULA=Y apt-get upgrade -y
        sudo apt-get update
        sudo apt-get install build-essential \
                             pkg-config \
                             libc6-dev \
                             m4 \
                             g++-multilib \
                             autoconf libtool \
                             libncurses-dev \
                             unzip  \
                             git \
                             python3 \
                             zlib1g-dev \
                             wget \
                             bsdmainutils \
                             automake \
                             libboost-all-dev \
                             libssl-dev \
                             libprotobuf-dev \
                             protobuf-compiler \
                             libqrencode-dev \
                             libdb++-dev \
                             ntp \
                             ntpdate \
                             nano \
                             software-properties-common \
                             curl \
                             libevent-dev \
                             libcurl4-gnutls-dev \
                             cmake \
                             clang \
                             libsodium-dev \
                             python3-zmq \
                             mingw-w64 -y
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        source $HOME/.cargo/env
        rustup target add x86_64-pc-windows-gnu
        sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
    - name: Build Win (mingw)
      run: |
        # flag for some CC tests transactions - so DO NOT USE THIS CI ARTIFACTS IN PRODUCTION!!!
        export CONFIGURE_FLAGS='CPPFLAGS=-DTESTMODE'
        ./zcutil/build-win-dtest.sh -j$(nproc)
        zip --junk-paths marmarad_win src/marmarad.exe src/marmara-cli.exe
    - name: Upload marmarad_win as artifact
      uses: actions/upload-artifact@v4
      with:
        name: marmarad_win
        path: ./marmarad_win.zip

  windows-test-baserpc:
    if: ${{ false }}
    
    name: Test (Win/BasicRPC)
    needs: windows-build
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download marmarad_win.zip
        uses: actions/download-artifact@v4
        with:
          name: marmarad_win

      - name: Install deps (Base)
        shell: cmd
        run: |
          move marmarad_win\marmarad_win.zip
          7z e marmarad_win.zip
          move marmarad.exe src\
          python.exe -m pip install --upgrade setuptools
          python.exe -m pip install --upgrade pip
          python.exe -m pip install pycurl pytest wget jsonschema
          python.exe -m pip install slick-bitcoinrpc
          zcutil\fetch-params.bat
      - name: Base RPC Test (Windows)
        shell: cmd
        run: |
          cd qa\pytest_komodo
          start_ci.bat basic
  # windows-test-dice-faucet-tok-rewCC:
  #   if: ${{ false }}
  #   name: Test (Win/Dice Faucet Token Rewards)
  #   runs-on: windows-latest
  #   needs: windows-build

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Download komodo_win.zip
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: komodod_win

  #     - name: Install deps (MainCC)
  #       shell: cmd
  #       run: |
  #         move komodod_win\komodod_win.zip
  #         7z e komodod_win.zip
  #         move komodod.exe src\
  #         vcpkg install curl openssl
  #         python.exe -m pip install --upgrade setuptools
  #         python.exe -m pip install --upgrade pip
  #         python.exe -m pip install wheel
  #         python.exe -m pip install pycurl==7.43.0.5
  #         python.exe -m pip install pytest wget jsonschema
  #         python.exe -m pip install slick-bitcoinrpc
  #         zcutil\fetch-params.bat
  #     - name: CC Dice Faucet Tokens Rewards (Windows)
  #       shell: cmd
  #       run: |
  #         cd qa\pytest_komodo
  #         start_ci.bat cc_modules\test_dice.py cc_modules\test_faucet.py cc_modules\test_token.py cc_modules\test_rewards.py
  windows-test-oracles-cc:
    if: ${{ false }}
    
    name: Test (Win/OraclesCC)
    runs-on: windows-latest
    needs: windows-build

    steps:
      - uses: actions/checkout@v4

      - name: Download marmarad_win.zip
        uses: actions/download-artifact@v4
        with:
          name: marmarad_win

      - name: Install deps (OraclesCC)
        shell: cmd
        run: |
          move marmarad_win\marmarad_win.zip
          7z e marmarad_win.zip
          move marmarad.exe src\
          python.exe -m pip install --upgrade setuptools
          python.exe -m pip install --upgrade pip
          python.exe -m pip install pycurl pytest wget jsonschema
          python.exe -m pip install slick-bitcoinrpc
          zcutil\fetch-params.bat
      - name: CC Oracles (Windows)
        shell: cmd
        run: |
          cd qa\pytest_komodo
          start_ci.bat cc_modules\test_oracles.py
  # windows-test-heir-cc:
  #   if: ${{ false }}
  #   name: Test (Win/HeirCC)
  #   runs-on: windows-latest
  #   needs: windows-build

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Download komodo_win.zip
  #       uses: actions/download-artifact@v1
  #       with:
  #         name: komodod_win

  #     - name: Install deps (CC Heir)
  #       shell: cmd
  #       run: |
  #         move komodod_win\komodod_win.zip
  #         7z e komodod_win.zip
  #         move komodod.exe src\
  #         vcpkg install curl openssl
  #         python.exe -m pip install --upgrade setuptools
  #         python.exe -m pip install --upgrade pip
  #         python.exe -m pip install wheel
  #         python.exe -m pip install pycurl==7.43.0.5
  #         python.exe -m pip install pytest wget jsonschema
  #         python.exe -m pip install slick-bitcoinrpc
  #         zcutil\fetch-params.bat
      # - name: CC Heir (Windows)
      #   shell: cmd
      #   run: |
      #     cd qa\pytest_komodo
      #     start_ci.bat cc_modules\test_heir.py
  #windows-test-channels-cc:
    #   if: ${{ false }}

    # name: Test (Win/ChannelsCC)
    # runs-on: windows-latest
    # needs: windows-build

    # steps:
    #   - uses: actions/checkout@v2

    #   - name: Download komodo_win.zip
    #     uses: actions/download-artifact@v1
    #     with:
    #       name: komodod_win

    #   - name: Install deps (ChannelsCC)
    #     shell: cmd
    #     run: |
    #       move komodod_win\komodod_win.zip
    #       7z e komodod_win.zip
    #       move komodod.exe src\
    #       vcpkg install curl openssl
    #       python.exe -m pip install --upgrade setuptools
    #       python.exe -m pip install --upgrade pip
    #       python.exe -m pip install wheel
    #       python.exe -m pip install pycurl==7.43.0.5
    #       python.exe -m pip install pytest wget jsonschema
    #       python.exe -m pip install slick-bitcoinrpc
    #       zcutil\fetch-params.bat
    #   - name: ChannelsCC (Windows)
    #     shell: cmd
    #     run: |
    #       cd qa\pytest_komodo
    #       start_ci.bat cc_modules\test_channels.py
